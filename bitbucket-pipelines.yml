# This is a sample build configuration for JavaScript.
# Check our guides at https://confluence.atlassian.com/x/14UWN for more examples.
# Only use spaces to indent your .yml configuration.
# -----
# You can specify a custom docker image from Docker Hub as your build environment.
clone:
  depth: full

image: node:12.18.3

pipelines:
  branches:
    # When code is pushed to the staging branch it is deployed automatically to the staging environment.
    develop:
      - step:
          name: Build & Testing Development
          caches:
            - node
          script:
            - rm -rf package-lock.json
            - rm -rf node_modules
            - npm run clean-dist
            - rm -rf public/dist
            - yarn install
            - yarn run build
      - step:
          name: Create artifact
          script:
            - git archive --format=tar.gz develop -o application.tar.gz
          artifacts:
            - application.tar.gz
      - step:
          name: Deploy to heroku development
          deployment: develop
          caches:
            - node
          script:
            - pipe: atlassian/heroku-deploy:1.1.4
              variables:
                HEROKU_API_KEY: $HEROKU_API_KEY
                HEROKU_APP_NAME: $HEROKU_APP_NAME
                ZIP_FILE: 'application.tar.gz'
                WAIT: 'true'
    staging:
      - step:
          name: Build & Testing Staging
          caches:
            - node
          script:
            - rm -rf package-lock.json
            - rm -rf node_modules
            - npm run clean-dist
            - rm -rf public/dist
            - yarn install
            - yarn run build
      - step:
          name: Create artifact
          script:
            - git archive --format=tar.gz develop -o application.tar.gz
          artifacts:
            - application.tar.gz
      - step:
          name: Deploy to heroku staging
          deployment: staging
          caches:
            - node
          script:
            - pipe: atlassian/heroku-deploy:1.1.4
              variables:
                HEROKU_API_KEY: $HEROKU_API_KEY
                HEROKU_APP_NAME: $HEROKU_APP_NAME
                ZIP_FILE: 'application.tar.gz'
                WAIT: 'true'
    production:
      - step:
          name: Build & Testing Production
          caches:
            - node
          script:
            - rm -rf package-lock.json
            - rm -rf node_modules
            - npm run clean-dist
            - rm -rf public/dist
            - yarn install
            - yarn run build
      - step:
          name: Create artifact
          script:
            - git archive --format=tar.gz develop -o application.tar.gz
          artifacts:
            - application.tar.gz
      - step:
          name: Deploy to heroku production
          deployment: production
          caches:
            - node
          script:
            - pipe: atlassian/heroku-deploy:1.1.4
              variables:
                HEROKU_API_KEY: $HEROKU_API_KEY
                HEROKU_APP_NAME: $HEROKU_APP_NAME
                ZIP_FILE: 'application.tar.gz'
                WAIT: 'true'
